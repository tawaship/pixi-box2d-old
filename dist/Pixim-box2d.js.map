{"version":3,"file":"Pixim-box2d.js","sources":["../src/pixim/Box2dObject.ts","../src/pixim/Box2dAlias.ts","../src/pixim/Conf.ts","../src/pixim/World.ts","../src/pixim/Circle.ts","../src/pixim/Rectangle.ts"],"sourcesContent":["import * as _PIXI from 'pixi.js';\r\nimport * as _Pixim from '@tawaship/pixim.js';\r\nimport { BodyDef, FixtureDef, Body } from './Box2dAlias';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IBox2dObjectOption {\r\n\t\t\tdensity?: number,\r\n\t\t\tfriction?: number,\r\n\t\t\trestitution?: number,\r\n\t\t\tcategoryBits?: number,\r\n\t\t\tmaskBits?: number,\r\n\t\t\tisSensor?: number,\r\n\t\t\tuserData?: _PIXI.Container\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\ttype TBox2dObjectBody = Body | null;\r\n\t\t\r\n\t\texport interface IBox2dObjectData {\r\n\t\t\tbody: TBox2dObjectBody,\r\n\t\t\tbodyDef: BodyDef,\r\n\t\t\tfixtureDefs: FixtureDef[]\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction createBodyDef(isDynamic: boolean = false) {\r\n\t\t\tconst bodyDef = new BodyDef();\r\n\t\t\tisDynamic ? bodyDef.type = Body.b2_dynamicBody : Body.b2_staticBody;\r\n\t\t\t\r\n\t\t\treturn bodyDef;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst dynamicBodyDef: BodyDef = createBodyDef(true);\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst staticBodyDef: BodyDef = createBodyDef(false);\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction createFixtureDef(options: IBox2dObjectOption = {}) {\r\n\t\t\tconst fixtureDef = new FixtureDef();\r\n\t\t\t\r\n\t\t\tfixtureDef.density = typeof(options.density) === 'number' ? options.density : fixtureDef.density;\r\n\t\t\tfixtureDef.friction = typeof(options.friction) === 'number' ? options.friction : fixtureDef.friction;\r\n\t\t\tfixtureDef.restitution = typeof(options.restitution) === 'number' ? options.restitution : fixtureDef.restitution;\r\n\t\t\tfixtureDef.filter.categoryBits = typeof(options.categoryBits) === 'number' ? options.categoryBits : fixtureDef.filter.categoryBits;\r\n\t\t\tfixtureDef.filter.maskBits = typeof(options.maskBits) === 'number' ? options.maskBits : fixtureDef.filter.maskBits;\r\n\t\t\tfixtureDef.isSensor = options.isSensor || fixtureDef.isSensor;\r\n\t\t\tfixtureDef.userData = options.userData || fixtureDef.userData;\r\n\t\t\t\r\n\t\t\treturn fixtureDef;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst descriptors = {\r\n\t\t\tpositionX: Object.getOwnPropertyDescriptor(_PIXI.ObservablePoint.prototype, 'x'),\r\n\t\t\tpositionY: Object.getOwnPropertyDescriptor(_PIXI.ObservablePoint.prototype, 'y'),\r\n\t\t\tpositionSet: _PIXI.ObservablePoint.prototype.set,\r\n\t\t\trotation: Object.getOwnPropertyDescriptor(_PIXI.DisplayObject.prototype, 'rotation')\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @see http://pixijs.download/release/docs/PIXI.Container.html\r\n\t\t */\r\n\t\texport class Box2dObject extends _PIXI.Container {\r\n\t\t\tprotected _box2dData: IBox2dObjectData;\r\n\t\t\t\r\n\t\t\tconstructor(isStatic: boolean = false, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\toptions.userData = options.userData || this;\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData = {\r\n\t\t\t\t\tbody: null,\r\n\t\t\t\t\tbodyDef: isStatic ? staticBodyDef : dynamicBodyDef,\r\n\t\t\t\t\tfixtureDefs: [createFixtureDef(options)]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgetBodyDef() {\r\n\t\t\t\treturn this._box2dData.bodyDef;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgetFixtureDefs() {\r\n\t\t\t\treturn this._box2dData.fixtureDefs;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget body() {\r\n\t\t\t\treturn this._box2dData.body;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset body(body: TBox2dObjectBody) {\r\n\t\t\t\tthis._box2dData.body = body;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget x() {\r\n\t\t\t\treturn descriptors.positionX.get.call(this.position);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset x(x: number) {\r\n\t\t\t\tdescriptors.positionX.set.call(this.position, x);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst p = body.GetPosition();\r\n\t\t\t\tp.x = x / Conf.Box2dToPixi;\r\n\t\t\t\tbody.SetPosition(p);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget y() {\r\n\t\t\t\treturn descriptors.positionY.get.call(this.position);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset y(y: number) {\r\n\t\t\t\tdescriptors.positionY.set.call(this.position, y);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst p = body.GetPosition();\r\n\t\t\t\tp.y = y / Conf.Box2dToPixi;\r\n\t\t\t\tbody.SetPosition(p);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget rotation() {\r\n\t\t\t\treturn descriptors.rotation.get.call(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset rotation(rotation: number) {\r\n\t\t\t\tdescriptors.rotation.set.call(this, rotation);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbody.SetAngle(rotation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Box2dObject = Pixim.box2d.Box2dObject;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IBox2dObjectOption = Pixim.box2d.IBox2dObjectOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IBox2dObjectData = Pixim.box2d.IBox2dObjectData;","import { Dynamics, Collision, Common } from 'box2dweb';\r\n\r\nexport import Vec2 = Common.Math.b2Vec2;\r\nexport import DebugDraw = Dynamics.b2DebugDraw;\r\nexport import World = Dynamics.b2World;\r\nexport import Contact = Dynamics.Contacts.box2dContact;\r\nexport import ContactListener = Dynamics.b2ContactListener;\r\nexport import BodyDef = Dynamics.b2BodyDef;\r\nexport import FixtureDef = Dynamics.b2FixtureDef;\r\nexport import Body = Dynamics.b2Body;\r\nexport import CircleShape = Collision.Shapes.b2CircleShape;\r\nexport import PolygonShape = Collision.Shapes.b2PolygonShape;","export const Box2dToPixi = 30;\r\nexport const PixiToBox2d = 1 / Box2dToPixi;","import * as _PIXI from 'pixi.js';\r\nimport * as _Pixim from '@tawaship/pixim.js';\r\nimport { Vec2, DebugDraw, World as _World, Contact, ContactListener } from './Box2dAlias';\r\nimport { Box2dObject } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IBox2dWorldData {\r\n\t\t\tworld: _World,\r\n\t\t\tlistener: ContactListener,\r\n\t\t\tenabled: boolean,\r\n\t\t\tspeed: number\r\n\t\t};\r\n\t\t\r\n\t\texport interface IBox2dWorldOption {\r\n\t\t\tgravityX?: number,\r\n\t\t\tgravityY?: number,\r\n\t\t\tallowSleep?: boolean,\r\n\t\t\tuseHandler?: IBox2dWorldHandlers\r\n\t\t};\r\n\t\t\r\n\t\texport interface IBox2dWorldHandlers {\r\n\t\t\tbeginContact?: boolean,\r\n\t\t\tendContact?: boolean,\r\n\t\t\tpreSolve?: boolean,\r\n\t\t\tpostSolve?: boolean\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction beginContactHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('BeginContact', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('BeginContact', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction endContactHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('EndContact', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('EndContact', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction preSolveHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('PreSolve', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('PreSolve', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction postSolveHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('PostSolve', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('PostSolve', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @see http://pixijs.download/release/docs/PIXI.Container.html\r\n\t\t */\r\n\t\texport class World extends _Pixim.Container {\r\n\t\t\tprivate _box2dData: IBox2dWorldData;\r\n\t\t\t\r\n\t\t\tconstructor(options: IBox2dWorldOption = {}) {\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\tconst gravityX = typeof(options.gravityX) === 'number' ? options.gravityX : 0;\r\n\t\t\t\tconst gravityY = typeof(options.gravityY) === 'number' ? options.gravityY : 9.8;\r\n\t\t\t\tconst allowSleep = !!options.allowSleep;\r\n\t\t\t\t\r\n\t\t\t\tconst useHandler = options.useHandler || {};\r\n\t\t\t\tconst beginContact = !!useHandler.beginContact;\r\n\t\t\t\tconst endContact = !!useHandler.endContact;\r\n\t\t\t\tconst preSolve = !!useHandler.preSolve;\r\n\t\t\t\tconst postSolve = !!useHandler.postSolve;\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData = {\r\n\t\t\t\t\tworld: new _World(new Vec2(gravityX, gravityY), allowSleep),\r\n\t\t\t\t\tlistener: new ContactListener(),\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tspeed: 1\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst listener = this._box2dData.listener;\r\n\t\t\t\tif (beginContact) {\r\n\t\t\t\t\tlistener.BeginContact = beginContactHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (endContact) {\r\n\t\t\t\t\tlistener.EndContact = endContactHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (preSolve) {\r\n\t\t\t\t\tlistener.PreSolve = preSolveHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (postSolve) {\r\n\t\t\t\t\tlistener.PostSolve = postSolveHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.box2dEnabled = true\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget speed() {\r\n\t\t\t\treturn this._box2dData.speed;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset speed(speed: number) {\r\n\t\t\t\tthis._box2dData.speed = speed;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget box2dEnabled() {\r\n\t\t\t\treturn this._box2dData.enabled;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset box2dEnabled(flag: boolean) {\r\n\t\t\t\tthis._box2dData.enabled = flag;\r\n\t\t\t\t\r\n\t\t\t\tthis.task.clear('box2dUpdate');\r\n\t\t\t\tif (flag) {\r\n\t\t\t\t\tthis.task.on('box2dUpdate', (e: _Pixim.ITickerData) => {\r\n\t\t\t\t\t\tconst world = this._box2dData.world;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tworld.Step(e.delta * this._box2dData.speed / 60, 10, 10);\r\n\t\t\t\t\t\tworld.ClearForces();\r\n\t\t\t\t\t\tworld.DrawDebugData();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst d = this.children;\r\n\t\t\t\t\t\tfor (var i = 0; i < d.length; i++) {\r\n\t\t\t\t\t\t\tif (!(d[i] instanceof Box2dObject)) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst r = d[i] as Box2dObject;\r\n\t\t\t\t\t\t\tconst position = r.body.GetPosition();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tr.x = position.x * Conf.Box2dToPixi;\r\n\t\t\t\t\t\t\tr.y = position.y * Conf.Box2dToPixi;\r\n\t\t\t\t\t\t\tr.rotation = r.body.GetAngle();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\taddDebugView(app: _PIXI.Application) {\r\n\t\t\t\tconst canvas = document.body.appendChild(document.createElement('canvas'));\r\n\t\t\t\tcanvas.width = app.view.width;\r\n\t\t\t\tcanvas.height = app.view.height;\r\n\t\t\t\tcanvas.style.width = app.view.style.width;\r\n\t\t\t\tcanvas.style.height = app.view.style.height;\r\n\t\t\t\tcanvas.style.top = app.view.style.top;\r\n\t\t\t\tcanvas.style.left = app.view.style.left;\r\n\t\t\t\tcanvas.style.position = 'absolute';\r\n\t\t\t\tcanvas.style.pointerEvents = 'none';\r\n\t\t\t\t\r\n\t\t\t\tconst debugDraw = new DebugDraw();\r\n\t\t\t\tdebugDraw.SetSprite(canvas.getContext('2d'));\r\n\t\t\t\tdebugDraw.SetDrawScale(Conf.Box2dToPixi);\r\n\t\t\t\tdebugDraw.SetFillAlpha(0.5);\r\n\t\t\t\tdebugDraw.SetLineThickness(1);\r\n\t\t\t\tdebugDraw.SetFlags(DebugDraw.e_shapeBit | DebugDraw.e_jointBit);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.world.SetDebugDraw(debugDraw);\r\n\t\t\t\t\r\n\t\t\t\treturn canvas;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\taddBox2d(child: Box2dObject) {\r\n\t\t\t\tthis.addChild(child);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.world.CreateBody(child.getBodyDef());\r\n\t\t\t\tvar fixtureDefs = child.getFixtureDefs();\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < fixtureDefs.length; i++) {\r\n\t\t\t\t\tbody.CreateFixture(fixtureDefs[i]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tchild.body = body;\r\n\t\t\t\t\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tremoveBox2d(child: Box2dObject) {\r\n\t\t\t\tthis.removeChild(child);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.world.DestroyBody(child.body);\r\n\t\t\t\t\r\n\t\t\t\tchild.body = null;\r\n\t\t\t\t\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import World = Pixim.box2d.World;","import * as _PIXI from 'pixi.js';\r\nimport { CircleShape } from './Box2dAlias';\r\nimport { World } from './World';\r\nimport { Box2dObject, IBox2dObjectData, IBox2dObjectOption } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface ICircleData extends IBox2dObjectData {\r\n\t\t\tradius: number\r\n\t\t};\r\n\t\t\r\n\t\texport class Circle extends Box2dObject {\r\n\t\t\tprotected _box2dData: ICircleData;\r\n\t\t\t\r\n\t\t\tconstructor(radius: number, isStatic: boolean, pixi: _PIXI.Container, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper(isStatic, options);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.radius = radius;\r\n\t\t\t\t\r\n\t\t\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\t\t\t\r\n\t\t\t\tfixtureDef.shape = new CircleShape(radius * Conf.PixiToBox2d);\r\n\t\t\t\tthis.addChild(pixi);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget radius() {\r\n\t\t\t\treturn this._box2dData.radius;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Circle = Pixim.box2d.Circle;","import * as _PIXI from 'pixi.js';\r\nimport { Vec2, PolygonShape } from './Box2dAlias';\r\nimport { World } from './World';\r\nimport { Box2dObject, IBox2dObjectData, IBox2dObjectOption } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\n/**\r\n * @ignore\r\n */\r\n\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IRectangleData extends IBox2dObjectData {\r\n\t\t\twidth: number,\r\n\t\t\theight: number\r\n\t\t};\r\n\t\t\r\n\t\texport class Rectangle extends Box2dObject {\r\n\t\t\tprotected _box2dData: IRectangleData;\r\n\t\t\t\r\n\t\t\tconstructor(width: number, height: number, isStatic: boolean, pixi: _PIXI.Container, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper(isStatic, options);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.width = width;\r\n\t\t\t\tthis._box2dData.height = height;\r\n\t\t\t\t\r\n\t\t\t\twidth *= Conf.PixiToBox2d;\r\n\t\t\t\theight *= Conf.PixiToBox2d;\r\n\t\t\t\t\r\n\t\t\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\t\t\tfixtureDef.shape = new PolygonShape();\r\n\t\t\t\tfixtureDef.shape.SetAsArray([\r\n\t\t\t\t\tnew Vec2(0, 0),\r\n\t\t\t\t\tnew Vec2(width, 0),\r\n\t\t\t\t\tnew Vec2(width, height),\r\n\t\t\t\t\tnew Vec2(0, height)\r\n\t\t\t\t]);\r\n\t\t\t\t\r\n\t\t\t\tthis.addChild(pixi);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Rectangle = Pixim.box2d.Rectangle;"],"names":["Pixim","Vec2","Common","Math","b2Vec2","DebugDraw","Dynamics","b2DebugDraw","World","b2World","ContactListener","Contacts","box2dContact","b2ContactListener","BodyDef","b2BodyDef","FixtureDef","b2FixtureDef","Body","b2Body","CircleShape","Collision","Shapes","b2CircleShape","PolygonShape","b2PolygonShape","box2d","createBodyDef","isDynamic","const","bodyDef","type","b2_dynamicBody","b2_staticBody","dynamicBodyDef","staticBodyDef","createFixtureDef","options","fixtureDef","density","friction","restitution","filter","categoryBits","maskBits","isSensor","userData","descriptors","positionX","Object","getOwnPropertyDescriptor","_PIXI.ObservablePoint","prototype","positionY","positionSet","set","rotation","_PIXI.DisplayObject","Box2dObject","isStatic","super","this","_box2dData","body","fixtureDefs","getBodyDef","getFixtureDefs","prototypeAccessors","x","get","call","position","p","GetPosition","SetPosition","y","SetAngle","_PIXI.Container","beginContactHandler","contact","dataA","GetFixtureA","GetUserData","dataB","GetFixtureB","emit","endContactHandler","preSolveHandler","postSolveHandler","gravityX","gravityY","allowSleep","useHandler","beginContact","endContact","preSolve","postSolve","world","_World","listener","enabled","speed","BeginContact","EndContact","PreSolve","PostSolve","box2dEnabled","flag","task","clear","on","e","Step","delta","ClearForces","DrawDebugData","d","children","i","length","r","GetAngle","addDebugView","app","canvas","document","appendChild","createElement","width","view","height","style","top","left","pointerEvents","debugDraw","SetSprite","getContext","SetDrawScale","SetFillAlpha","SetLineThickness","SetFlags","e_shapeBit","e_jointBit","SetDebugDraw","addBox2d","child","addChild","CreateBody","CreateFixture","removeBox2d","removeChild","DestroyBody","_Pixim.Container","Circle","radius","pixi","shape","Rectangle","SetAsArray"],"mappings":"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"}