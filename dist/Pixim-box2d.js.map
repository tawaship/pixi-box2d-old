{"version":3,"file":"Pixim-box2d.js","sources":["../src/pixim/Conf.ts","../src/pixim/Box2dAlias.ts","../src/pixim/Box2dObject.ts","../src/pixim/World.ts","../src/pixim/Circle.ts","../src/pixim/Rectangle.ts","../src/pixim/funcs.ts"],"sourcesContent":["namespace PIXI {\r\n\texport namespace box2d {\r\n\t\texport const Box2dToPixi = 30;\r\n\t\texport const PixiToBox2d = 1 / Box2dToPixi;\r\n\t\t\r\n\t\texport interface IPrepareOption {\r\n\t\t\tuseDebugDraw?: boolean\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Box2dToPixi = PIXI.box2d.Box2dToPixi;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import PixiToBox2d = PIXI.box2d.PixiToBox2d;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IPrepareOption = PIXI.box2d.IPrepareOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport const options: PIXI.box2d.IPrepareOption = {};","import { Dynamics, Collision, Common } from 'box2dweb';\r\n\r\nexport import Vec2 = Common.Math.b2Vec2;\r\nexport import DebugDraw = Dynamics.b2DebugDraw;\r\nexport import World = Dynamics.b2World;\r\nexport import Contact = Dynamics.Contacts.box2dContact;\r\nexport import ContactListener = Dynamics.b2ContactListener;\r\nexport import BodyDef = Dynamics.b2BodyDef;\r\nexport import FixtureDef = Dynamics.b2FixtureDef;\r\nexport import Body = Dynamics.b2Body;\r\nexport import CircleShape = Collision.Shapes.b2CircleShape;\r\nexport import PolygonShape = Collision.Shapes.b2PolygonShape;","import * as _PIXI from 'pixi.js';\r\nimport * as _Pixim from '@tawaship/pixim.js';\r\nimport { BodyDef, FixtureDef, Body } from './Box2dAlias';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IBox2dObjectOption {\r\n\t\t\tdensity?: number,\r\n\t\t\tfriction?: number,\r\n\t\t\trestitution?: number,\r\n\t\t\tcategoryBits?: number,\r\n\t\t\tmaskBits?: number,\r\n\t\t\tisSensor?: number,\r\n\t\t\tuserData?: _PIXI.Container\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @private\r\n\t\t */\r\n\t\ttype TBox2dObjectBody = Body | null;\r\n\t\t\r\n\t\texport interface IBox2dObjectData {\r\n\t\t\tbody: TBox2dObjectBody,\r\n\t\t\tbodyDef: BodyDef,\r\n\t\t\tfixtureDefs: FixtureDef[]\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction createBodyDef(isDynamic: boolean = false) {\r\n\t\t\tconst bodyDef = new BodyDef();\r\n\t\t\tisDynamic ? bodyDef.type = Body.b2_dynamicBody : Body.b2_staticBody;\r\n\t\t\t\r\n\t\t\treturn bodyDef;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst dynamicBodyDef: BodyDef = createBodyDef(true);\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst staticBodyDef: BodyDef = createBodyDef(false);\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction createFixtureDef(options: IBox2dObjectOption = {}) {\r\n\t\t\tconst fixtureDef = new FixtureDef();\r\n\t\t\t\r\n\t\t\tfixtureDef.density = typeof(options.density) === 'number' ? options.density : fixtureDef.density;\r\n\t\t\tfixtureDef.friction = typeof(options.friction) === 'number' ? options.friction : fixtureDef.friction;\r\n\t\t\tfixtureDef.restitution = typeof(options.restitution) === 'number' ? options.restitution : fixtureDef.restitution;\r\n\t\t\tfixtureDef.filter.categoryBits = typeof(options.categoryBits) === 'number' ? options.categoryBits : fixtureDef.filter.categoryBits;\r\n\t\t\tfixtureDef.filter.maskBits = typeof(options.maskBits) === 'number' ? options.maskBits : fixtureDef.filter.maskBits;\r\n\t\t\tfixtureDef.isSensor = options.isSensor || fixtureDef.isSensor;\r\n\t\t\tfixtureDef.userData = options.userData || fixtureDef.userData;\r\n\t\t\t\r\n\t\t\treturn fixtureDef;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tconst descriptors = {\r\n\t\t\tpositionX: Object.getOwnPropertyDescriptor(_PIXI.ObservablePoint.prototype, 'x'),\r\n\t\t\tpositionY: Object.getOwnPropertyDescriptor(_PIXI.ObservablePoint.prototype, 'y'),\r\n\t\t\tpositionSet: _PIXI.ObservablePoint.prototype.set,\r\n\t\t\trotation: Object.getOwnPropertyDescriptor(_PIXI.DisplayObject.prototype, 'rotation')\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @see http://pixijs.download/release/docs/PIXI.Container.html\r\n\t\t */\r\n\t\texport class Box2dObject extends _PIXI.Container {\r\n\t\t\tprotected _box2dData: IBox2dObjectData;\r\n\t\t\t\r\n\t\t\tconstructor(isStatic: boolean = false, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\toptions.userData = options.userData || this;\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData = {\r\n\t\t\t\t\tbody: null,\r\n\t\t\t\t\tbodyDef: isStatic ? staticBodyDef : dynamicBodyDef,\r\n\t\t\t\t\tfixtureDefs: [createFixtureDef(options)]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgetBodyDef() {\r\n\t\t\t\treturn this._box2dData.bodyDef;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgetFixtureDefs() {\r\n\t\t\t\treturn this._box2dData.fixtureDefs;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget body() {\r\n\t\t\t\treturn this._box2dData.body;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset body(body: TBox2dObjectBody) {\r\n\t\t\t\tthis._box2dData.body = body;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget x() {\r\n\t\t\t\treturn descriptors.positionX.get.call(this.position);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset x(x: number) {\r\n\t\t\t\tdescriptors.positionX.set.call(this.position, x);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst p = body.GetPosition();\r\n\t\t\t\tp.x = x / Conf.Box2dToPixi;\r\n\t\t\t\tbody.SetPosition(p);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget y() {\r\n\t\t\t\treturn descriptors.positionY.get.call(this.position);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset y(y: number) {\r\n\t\t\t\tdescriptors.positionY.set.call(this.position, y);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tconst p = body.GetPosition();\r\n\t\t\t\tp.y = y / Conf.Box2dToPixi;\r\n\t\t\t\tbody.SetPosition(p);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget rotation() {\r\n\t\t\t\treturn descriptors.rotation.get.call(this);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset rotation(rotation: number) {\r\n\t\t\t\tdescriptors.rotation.set.call(this, rotation);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.body;\r\n\t\t\t\tif (!body) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbody.SetAngle(rotation);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Box2dObject = Pixim.box2d.Box2dObject;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IBox2dObjectOption = Pixim.box2d.IBox2dObjectOption;\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import IBox2dObjectData = Pixim.box2d.IBox2dObjectData;","import { Application, Container } from 'pixi.js';\r\nimport * as _Pixim from '@tawaship/pixim.js';\r\nimport { Vec2, DebugDraw, World as _World, Contact, ContactListener } from './Box2dAlias';\r\nimport { Box2dObject } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IBox2dWorldData {\r\n\t\t\tworld: _World,\r\n\t\t\tlistener: ContactListener,\r\n\t\t\tenabled: boolean,\r\n\t\t\tspeed: number,\r\n\t\t\tid: number\r\n\t\t};\r\n\t\t\r\n\t\texport interface IBox2dWorldOption {\r\n\t\t\tgravityX?: number,\r\n\t\t\tgravityY?: number,\r\n\t\t\tallowSleep?: boolean,\r\n\t\t\tuseHandler?: IBox2dWorldHandlers\r\n\t\t};\r\n\t\t\r\n\t\texport interface IBox2dWorldHandlers {\r\n\t\t\tbeginContact?: boolean,\r\n\t\t\tendContact?: boolean,\r\n\t\t\tpreSolve?: boolean,\r\n\t\t\tpostSolve?: boolean\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction beginContactHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('BeginContact', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('BeginContact', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction endContactHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('EndContact', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('EndContact', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction preSolveHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('PreSolve', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('PreSolve', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction postSolveHandler(contact: Contact) {\r\n\t\t\tconst dataA = contact.GetFixtureA().GetUserData();\r\n\t\t\tconst dataB = contact.GetFixtureB().GetUserData();\r\n\t\t\t\r\n\t\t\tdataA && dataA.emit && dataA.emit('PostSolve', dataB);\r\n\t\t\tdataB && dataB.emit && dataB.emit('PostSolve', dataA);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tlet _app: Application = null;\r\n\t\t\r\n\t\tApplication.registerPlugin({\r\n\t\t\tinit() {\r\n\t\t\t\tthis.ticker.add(World.update);\r\n\t\t\t\t_app = this;\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tdestroy() {\r\n\t\t\t\tthis.ticker.remove(World.update);\r\n\t\t\t\t_app = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tfunction addDebugDraw(app: Application, world: _World) {\r\n\t\t\tconst canvas = document.body.appendChild(document.createElement('canvas'));\r\n\t\t\tcanvas.width = app.view.width;\r\n\t\t\tcanvas.height = app.view.height;\r\n\t\t\tcanvas.style.width = app.view.style.width;\r\n\t\t\tcanvas.style.height = app.view.style.height;\r\n\t\t\tcanvas.style.top = app.view.style.top;\r\n\t\t\tcanvas.style.left = app.view.style.left;\r\n\t\t\tcanvas.style.position = 'absolute';\r\n\t\t\tcanvas.style.pointerEvents = 'none';\r\n\t\t\tcanvas.style.zIndex = '100';\r\n\t\t\t\r\n\t\t\tconst debugDraw = new DebugDraw();\r\n\t\t\tdebugDraw.SetSprite(canvas.getContext('2d'));\r\n\t\t\tdebugDraw.SetDrawScale(Conf.Box2dToPixi);\r\n\t\t\tdebugDraw.SetFillAlpha(0.5);\r\n\t\t\tdebugDraw.SetLineThickness(1);\r\n\t\t\tdebugDraw.SetFlags(DebugDraw.e_shapeBit | DebugDraw.e_jointBit);\r\n\t\t\t\r\n\t\t\tworld.SetDebugDraw(debugDraw);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * @see http://pixijs.download/release/docs/PIXI.Container.html\r\n\t\t */\r\n\t\texport class World extends _Pixim.Container {\r\n\t\t\tprivate static _id: number = 0;\r\n\t\t\tprivate static _targets: { [id: number]: World} = {};\r\n\t\t\tprivate _box2dData: IBox2dWorldData;\r\n\t\t\t\r\n\t\t\tconstructor(options: IBox2dWorldOption = {}) {\r\n\t\t\t\tsuper();\r\n\t\t\t\t\r\n\t\t\t\tconst gravityX = typeof(options.gravityX) === 'number' ? options.gravityX : 0;\r\n\t\t\t\tconst gravityY = typeof(options.gravityY) === 'number' ? options.gravityY : 9.8;\r\n\t\t\t\tconst allowSleep = !!options.allowSleep;\r\n\t\t\t\t\r\n\t\t\t\tconst useHandler = options.useHandler || {};\r\n\t\t\t\tconst beginContact = !!useHandler.beginContact;\r\n\t\t\t\tconst endContact = !!useHandler.endContact;\r\n\t\t\t\tconst preSolve = !!useHandler.preSolve;\r\n\t\t\t\tconst postSolve = !!useHandler.postSolve;\r\n\t\t\t\t\r\n\t\t\t\tconst world = new _World(new Vec2(gravityX, gravityY), allowSleep);\r\n\t\t\t\t\r\n\t\t\t\tif (Conf.options.useDebugDraw) {\r\n\t\t\t\t\taddDebugDraw(_app, world);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.on('added', () => {\r\n\t\t\t\t\tWorld._add(this._box2dData.id, this);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis.on('removed', () => {\r\n\t\t\t\t\tWorld._remove(this._box2dData.id);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData = {\r\n\t\t\t\t\tworld,\r\n\t\t\t\t\tlistener: new ContactListener(),\r\n\t\t\t\t\tenabled: true,\r\n\t\t\t\t\tspeed: 1,\r\n\t\t\t\t\tid: World._id++\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tconst listener = this._box2dData.listener;\r\n\t\t\t\tif (beginContact) {\r\n\t\t\t\t\tlistener.BeginContact = beginContactHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (endContact) {\r\n\t\t\t\t\tlistener.EndContact = endContactHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (preSolve) {\r\n\t\t\t\t\tlistener.PreSolve = preSolveHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (postSolve) {\r\n\t\t\t\t\tlistener.PostSolve = postSolveHandler;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.box2dEnabled = true\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstatic update(delta: number) {\r\n\t\t\t\tfor (let i in World._targets) {\r\n\t\t\t\t\tif (World._targets[i].box2dEnabled) {\r\n\t\t\t\t\t\tWorld._targets[i].update(delta);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tprivate static _add(id: number, world: World) {\r\n\t\t\t\tthis._targets[id] = world;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tprivate static _remove(id: number) {\r\n\t\t\t\tdelete(this._targets[id]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget speed() {\r\n\t\t\t\treturn this._box2dData.speed;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset speed(speed: number) {\r\n\t\t\t\tthis._box2dData.speed = speed;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget box2dEnabled() {\r\n\t\t\t\treturn this._box2dData.enabled;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tset box2dEnabled(flag: boolean) {\r\n\t\t\t\tthis._box2dData.enabled = flag;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tupdate(delta: number) {\r\n\t\t\t\tconst world = this._box2dData.world;\r\n\t\t\t\t\r\n\t\t\t\tworld.Step(delta * this._box2dData.speed / 60, 10, 10);\r\n\t\t\t\tworld.ClearForces();\r\n\t\t\t\tworld.DrawDebugData();\r\n\t\t\t\t\r\n\t\t\t\tconst d = this.children;\r\n\t\t\t\tfor (var i = 0; i < d.length; i++) {\r\n\t\t\t\t\tif (!(d[i] instanceof Box2dObject)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst r = d[i] as Box2dObject;\r\n\t\t\t\t\tconst position = r.body.GetPosition();\r\n\t\t\t\t\t\r\n\t\t\t\t\tr.x = position.x * Conf.Box2dToPixi;\r\n\t\t\t\t\tr.y = position.y * Conf.Box2dToPixi;\r\n\t\t\t\t\tr.rotation = r.body.GetAngle();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\taddBox2d(child: Box2dObject) {\r\n\t\t\t\tthis.addChild(child);\r\n\t\t\t\t\r\n\t\t\t\tconst body = this._box2dData.world.CreateBody(child.getBodyDef());\r\n\t\t\t\tvar fixtureDefs = child.getFixtureDefs();\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < fixtureDefs.length; i++) {\r\n\t\t\t\t\tbody.CreateFixture(fixtureDefs[i]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tchild.body = body;\r\n\t\t\t\t\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tremoveBox2d(child: Box2dObject) {\r\n\t\t\t\tthis.removeChild(child);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.world.DestroyBody(child.body);\r\n\t\t\t\t\r\n\t\t\t\tchild.body = null;\r\n\t\t\t\t\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import World = Pixim.box2d.World;","import * as _PIXI from 'pixi.js';\r\nimport { CircleShape } from './Box2dAlias';\r\nimport { World } from './World';\r\nimport { Box2dObject, IBox2dObjectData, IBox2dObjectOption } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface ICircleData extends IBox2dObjectData {\r\n\t\t\tradius: number\r\n\t\t};\r\n\t\t\r\n\t\texport class Circle extends Box2dObject {\r\n\t\t\tprotected _box2dData: ICircleData;\r\n\t\t\t\r\n\t\t\tconstructor(radius: number, isStatic: boolean, pixi: _PIXI.Container, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper(isStatic, options);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.radius = radius;\r\n\t\t\t\t\r\n\t\t\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\t\t\t\r\n\t\t\t\tfixtureDef.shape = new CircleShape(radius * Conf.PixiToBox2d);\r\n\t\t\t\tthis.addChild(pixi);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tget radius() {\r\n\t\t\t\treturn this._box2dData.radius;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Circle = Pixim.box2d.Circle;","import * as _PIXI from 'pixi.js';\r\nimport { Vec2, PolygonShape } from './Box2dAlias';\r\nimport { World } from './World';\r\nimport { Box2dObject, IBox2dObjectData, IBox2dObjectOption } from './Box2dObject';\r\nimport * as Conf from './Conf';\r\n\r\n/**\r\n * @ignore\r\n */\r\n\r\n\r\nnamespace Pixim {\r\n\texport namespace box2d {\r\n\t\texport interface IRectangleData extends IBox2dObjectData {\r\n\t\t\twidth: number,\r\n\t\t\theight: number\r\n\t\t};\r\n\t\t\r\n\t\texport class Rectangle extends Box2dObject {\r\n\t\t\tprotected _box2dData: IRectangleData;\r\n\t\t\t\r\n\t\t\tconstructor(width: number, height: number, isStatic: boolean, pixi: _PIXI.Container, options: IBox2dObjectOption = {}) {\r\n\t\t\t\tsuper(isStatic, options);\r\n\t\t\t\t\r\n\t\t\t\tthis._box2dData.width = width;\r\n\t\t\t\tthis._box2dData.height = height;\r\n\t\t\t\t\r\n\t\t\t\twidth *= Conf.PixiToBox2d;\r\n\t\t\t\theight *= Conf.PixiToBox2d;\r\n\t\t\t\t\r\n\t\t\t\tconst fixtureDef = this.getFixtureDefs()[0];\r\n\t\t\t\tfixtureDef.shape = new PolygonShape();\r\n\t\t\t\tfixtureDef.shape.SetAsArray([\r\n\t\t\t\t\tnew Vec2(0, 0),\r\n\t\t\t\t\tnew Vec2(width, 0),\r\n\t\t\t\t\tnew Vec2(width, height),\r\n\t\t\t\t\tnew Vec2(0, height)\r\n\t\t\t\t]);\r\n\t\t\t\t\r\n\t\t\t\tthis.addChild(pixi);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import Rectangle = Pixim.box2d.Rectangle;","import { IPrepareOption, options as _options } from './Conf';\r\n\r\nnamespace PIXI {\r\n\texport namespace box2d {\r\n\t\texport function setConfig(options: IPrepareOption = {}) {\r\n\t\t\t_options.useDebugDraw = options.useDebugDraw;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport { IPrepareOption };\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport import setConfig = PIXI.box2d.setConfig;"],"names":["PIXI","Vec2","Common","Math","b2Vec2","DebugDraw","Dynamics","b2DebugDraw","World","b2World","ContactListener","Contacts","box2dContact","b2ContactListener","BodyDef","b2BodyDef","FixtureDef","b2FixtureDef","Body","b2Body","CircleShape","Collision","Shapes","b2CircleShape","PolygonShape","b2PolygonShape","box2d","Box2dToPixi","Pixim","PixiToBox2d","options","createBodyDef","isDynamic","const","bodyDef","type","b2_dynamicBody","b2_staticBody","dynamicBodyDef","staticBodyDef","createFixtureDef","fixtureDef","density","friction","restitution","filter","categoryBits","maskBits","isSensor","userData","descriptors","positionX","Object","getOwnPropertyDescriptor","_PIXI.ObservablePoint","prototype","positionY","positionSet","set","rotation","_PIXI.DisplayObject","Box2dObject","isStatic","super","this","_box2dData","body","fixtureDefs","getBodyDef","getFixtureDefs","prototypeAccessors","x","get","call","position","p","GetPosition","Conf.Box2dToPixi","SetPosition","y","SetAngle","_PIXI.Container","beginContactHandler","contact","dataA","GetFixtureA","GetUserData","dataB","GetFixtureB","emit","endContactHandler","preSolveHandler","postSolveHandler","let","_app","Application","registerPlugin","init","ticker","add","update","destroy","remove","gravityX","gravityY","allowSleep","useHandler","beginContact","endContact","preSolve","postSolve","world","_World","Conf.options","useDebugDraw","app","canvas","document","appendChild","createElement","width","view","height","style","top","left","pointerEvents","zIndex","debugDraw","SetSprite","getContext","SetDrawScale","SetFillAlpha","SetLineThickness","SetFlags","e_shapeBit","e_jointBit","SetDebugDraw","addDebugDraw","on","_add","id","_remove","listener","enabled","speed","_id","BeginContact","EndContact","PreSolve","PostSolve","box2dEnabled","delta","i","_targets","flag","Step","ClearForces","DrawDebugData","d","children","length","r","GetAngle","addBox2d","child","addChild","CreateBody","CreateFixture","removeBox2d","removeChild","DestroyBody","_Pixim.Container","Circle","radius","pixi","shape","Conf.PixiToBox2d","Rectangle","SetAsArray","_options","setConfig"],"mappings":"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"}